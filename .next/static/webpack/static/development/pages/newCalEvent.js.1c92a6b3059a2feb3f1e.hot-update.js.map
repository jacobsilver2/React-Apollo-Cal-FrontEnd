{"version":3,"file":"static/webpack/static/development/pages/newCalEvent.js.1c92a6b3059a2feb3f1e.hot-update.js","sources":["webpack:///./components/Act.js","webpack:///./components/Acts.js","webpack:///./components/CreateEvent.js","webpack:///./components/styles/ItemStyles.js","webpack:///./components/styles/Title.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport Title from './styles/Title';\nimport ActStyles from './styles/ItemStyles';\n\nclass Act extends Component {\n\n  static propTypes = {\n    act: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const { act } = this.props;\n    return (\n      <ActStyles>\n        {act.image && <img src={act.image} alt={act.name}/>}\n\n        <Title>\n          <Link\n            href={{\n              pathname: '/act',\n              query: { id: act.id }\n            }}\n          >\n            <a>{act.name}</a>\n          </Link>\n        </Title>\n        <p>{act.description}</p>\n        <p>{act.notes}</p>\n      </ActStyles>\n    );\n  }\n}\n\nexport default Act;","import React, { Component } from 'react';\nimport {Query} from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Act from './Act';\nimport Error from './ErrorMessage';\n\n\nconst ALL_ACTS_QUERY = gql`\n  query ALL_ACTS_QUERY {\n    acts {\n      id\n      name\n      description\n      image\n      largeImage\n      email\n      notes\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst ActsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n`;\n\nclass Acts extends Component {\n  \n  render() {\n    return (\n      <Center>\n        <Query query={ALL_ACTS_QUERY}>\n          {({error, loading, data}) => {\n            if (error) return <Error error={error} />\n            if (loading) return <p>Loading</p>\n            console.log(data.acts);\n            const acts = data.acts;\n            return (\n              <ActsList>{acts.map(act => <Act act={act} key={act.id} />)}</ActsList>\n            )\n          }}\n        </Query>\n      </Center>\n    );\n  }\n}\n\n\nexport {ALL_ACTS_QUERY};\nexport default Acts;\n","import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { ALL_EVENTS_QUERY } from './Calendar'; \nimport { ALL_ACTS_QUERY } from './Acts';\n\n\nconst CREATE_EVENT_MUTATION = gql`\n  mutation CREATE_EVENT_MUTATION(\n      $date: DateTime!\n      $notes: String\n      $name: String\n      $email: String\n      $description: String\n      $image: String\n      $largeImage: String\n  ) {\n    createEvent( \n        date: $date\n        notes: $notes\n        name: $name\n        email: $email\n        description: $description\n        image: $image\n        largeImage: $largeImage\n    ) \n    { id }\n  }\n`;\n\n\nclass CreateEvent extends Component {\n  state = {\n      date: '',\n      notes: '',\n      name: '',\n      image: '',\n      largeImage: '',\n      email: '',\n      description: '',\n  }\n\n  update = (cache, payload) => {\n    // manually update the cache on the client, so it matches the server\n\n    // 1. Read the events in the cache\n    const data = cache.readQuery({ query: ALL_EVENTS_QUERY })\n    \n    // 2. Add the new event to the events\n    data.events = data.events.push(payload.data);\n\n    // 3. Put the items back\n    cache.writeQuery( {query: ALL_EVENTS_QUERY, data });\n  }\n\n  handleChange = (e) => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? parseFloat(value) : value;\n    this.setState({\n      [name]: val\n    })\n  }\n\n    uploadFile = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'react-apollo-cal');\n    const res = await fetch('https://api.cloudinary.com/v1_1/dlskxwzm6/image/upload', {\n      method: 'POST',\n      body: data\n    });\n    const file = await res.json();\n    this.setState({\n      image: file.secure_url,\n      largeImage: file.eager[0].secure_url\n    })\n  }\n\n  render() {\n    return (\n      <Mutation mutation={CREATE_EVENT_MUTATION} update={this.update} variables={this.state}>\n        {(createEvent, { loading, error, called, data }) => (\n\n          <Form onSubmit={ async (e) => {\n            e.preventDefault();\n            const res = await createEvent();\n            Router.push({\n              pathname: '/'\n            })\n          }}>\n            <Error error={error} />\n\n            <fieldset disabled={loading} aria-busy={loading}>\n              <label htmlFor=\"date\">\n                Date\n                <input type=\"date\" id=\"date\" name=\"date\" placeholder=\"Date\" required value={this.state.date} onChange={this.handleChange}/>\n              </label>\n        \n              <label htmlFor=\"notes\">\n                Notes\n                <textarea id=\"notes\" name=\"notes\" placeholder=\"Enter Some Notes\" value={this.state.notes} onChange={this.handleChange}/>\n              </label>\n\n              <label htmlFor=\"name\">\n                Name\n                <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Name\" required value={this.state.name} onChange={this.handleChange}/>\n              </label>\n\n              <label htmlFor=\"description\">\n                Description\n                <textarea id=\"description\" name=\"description\" placeholder=\"Enter A Description\" required value={this.state.description} onChange={this.handleChange}/>\n              </label>\n        \n              <label htmlFor=\"email\">\n                Email\n                <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"email\" required value={this.state.email} onChange={this.handleChange}/>\n              </label>\n\n              <label htmlFor=\"file\">\n                Image\n                <input type=\"file\" id=\"file\" name=\"file\" placeholder=\"Upload an image\" onChange={this.uploadFile}/>\n                {this.state.image && <img src={this.state.image} alt=\"Upload Preview\" width=\"200\"/>}\n              </label>\n        \n              <button type=\"submit\">Submit</button>\n            </fieldset>\n          </Form>      \n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport { CREATE_EVENT_MUTATION };\nexport default CreateEvent;","import styled from 'styled-components';\n\nconst Item = styled.div`\n  background: white;\n  border: 1px solid ${props => props.theme.offWhite};\n  box-shadow: ${props => props.theme.bs};\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  img {\n    width: 100%;\n    height: 400px;\n    object-fit: cover;\n  }\n  p {\n    font-size: 12px;\n    line-height: 2;\n    font-weight: 300;\n    flex-grow: 1;\n    padding: 0 3rem;\n    font-size: 1.5rem;\n  }\n  .buttonList {\n    display: grid;\n    width: 100%;\n    border-top: 1px solid ${props => props.theme.lightgrey};\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n    grid-gap: 1px;\n    background: ${props => props.theme.lightgrey};\n    & > * {\n      background: white;\n      border: 0;\n      font-size: 1rem;\n      padding: 1rem;\n    }\n  }\n`;\n\nexport default Item;\n","import styled from 'styled-components';\n\nconst Title = styled.h3`\n  margin: 0 1rem;\n  text-align: center;\n  transform: skew(-5deg) rotate(-1deg);\n  margin-top: -3rem;\n  text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);\n  a {\n    background: ${props => props.theme.red};\n    display: inline;\n    line-height: 1.3;\n    font-size: 4rem;\n    text-align: center;\n    color: white;\n    padding: 0 1rem;\n  }\n`;\n\nexport default Title;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAMA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA1BA;AACA;AADA;AAGA;AADA;AACA;AA0BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AAGA;AAcA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAGA;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;;;;AAlBA;AACA;AAqBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAuBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAMA;AACA;AAFA;AACA;AANA;AAKA;AALA;AAAA;AACA;AADA;AASA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAeiDA;;;;AApGA;AACA;AAsGA;AACA;;;;;;;;;;;;AC1IA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAoBA;AAAA;AAGA;AAAA;AAUA;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAAA;AAUA;;;;A","sourceRoot":""}