{"version":3,"file":"static/webpack/static/development/pages/permissions.js.20c7c65e6360153c0750.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import { Query, Mutation } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport StyledTable from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\n\nconst possiblePermissions = [\n  'ADMIN',\n  'USER',\n  'EVENTCREATE',\n  'EVENTUPDATE',\n  'EVENTDELETE',\n  'PERMISSIONUPDATE',\n]\n\nconst ALL_USERS_QUERY = gql`\n  query ALL_USERS_QUERY {\n    users {\n      id\n      name\n      email\n      permissions\n    }\n  }\n`;\n\nconst UPDATE_PERMISSIONS_MUTATION = gql`\n  mutation updatePermissions($permissions: [Permission], $userId: ID!) {\n    updatePermissions(permissions: $permissions, userId: $userId) {\n      id\n      permissions\n      name\n      email\n    }\n  }\n`;\n\nconst Permissions = (props) => (\n  <Query query={ALL_USERS_QUERY}>\n    {({data, loading, error}) => (\n      <div>\n        <Error error={error}/>\n        <div>\n          <h2>Manage Permissions</h2>\n          <StyledTable>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                {possiblePermissions.map(permission => \n                  <th key={permission}>{permission}</th>\n                )}\n                <th>ðŸ‘‡</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.users.map(user => <UserPermissions user={user} key={user.id}/>)}\n            </tbody>\n          </StyledTable>\n        </div>\n      </div>\n    )}\n  </Query>\n);\n\nclass UserPermissions extends React.Component {\n\n  static propTypes = {\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      email: PropTypes.string,\n      id: PropTypes.string,\n      permissions: PropTypes.array,\n    }).isRequired\n  }\n\n  state = {\n    permissions: this.props.user.permissions,\n  }\n\n  handlePermissionChange = (e) => {\n    const checkbox = e.target;\n    // take a copy of the current permissions\n    let updatedPermissions = [...this.state.permissions];\n    // figure out if we need to remove or add this permission\n    if (checkbox.checked) {\n      updatedPermissions.push(checkbox.value);\n    } else {\n      updatedPermissions = updatedPermissions.filter(permission => permission !== checkbox.value);\n    }\n    this.setState({ permissions: updatedPermissions })\n  }\n\n  render() {\n    const user = this.props.user;\n    return (\n      <Mutation mutation={UPDATE_PERMISSIONS_MUTATION} variables={{permissions: this.state.permissions, userId: this.props.userId }}>\n        {(updatePermissions, {loading, error}) => (\n          <>\n            { error && <tr><td colSpan=\"8\"><Error error={error}/></td></tr>}\n            <tr>\n              <td>{user.name}</td>\n              <td>{user.email}</td>\n              {possiblePermissions.map(permission => (\n                <td key={permission}>\n                  <label htmlFor={`${user.id}-permission-${permission}`}>\n                    <input id={`${user.id}-permission-${permission}`} type=\"checkbox\" checked={this.state.permissions.includes(permission)} value={permission} onChange={this.handlePermissionChange}/>\n                  </label>\n                </td>\n              ))}\n              <td>\n                <SickButton\n                  type=\"button\"\n                  onClick={updatePermissions}\n                  disabled={loading}\n                >Updat{loading ? 'ing' : 'e' }</SickButton>\n              </td>\n            </tr>\n          </>\n        )}\n      </Mutation>\n    );\n  }\n}\n\n\n\nexport default Permissions;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AAWA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAFA;AACA;AA2BA;;;;;;;;;;;;;;;;;;AAWA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAyBA;;;;AAzDA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AA2DA;;;;A","sourceRoot":""}