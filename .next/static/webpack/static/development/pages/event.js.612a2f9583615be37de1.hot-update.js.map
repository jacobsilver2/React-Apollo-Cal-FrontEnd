{"version":3,"file":"static/webpack/static/development/pages/event.js.612a2f9583615be37de1.hot-update.js","sources":["webpack:///./components/DeleteEvent.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag'; \nimport Router from 'next/router';\nimport { ALL_EVENTS_QUERY } from './Calendar';\n\nconst DELETE_EVENT_MUTATION = gql`\n  mutation DELETE_EVENT_MUTATION($id: ID!) {\n    deleteEvent(id: $id) {\n      id\n    }\n  }\n`;\n\nclass DeleteEvent extends Component {\n  update = (cache, payload) => {\n    // manually update the cache on the client, so it matches the server\n\n    // 1. Read the events in the cache\n    const data = cache.readQuery({ query: ALL_EVENTS_QUERY })\n    \n    // 2. Filter the deleted event out of the page\n    data.events = data.events.filter(event => event.id !== payload.data.deleteEvent.id);\n\n    // 3. Put the items back\n    cache.writeQuery( {query: ALL_EVENTS_QUERY, data });\n  }\n  render() {\n    return (\n      <Mutation mutation={DELETE_EVENT_MUTATION} update={this.update} variables={{id: this.props.id} }>\n        {(deleteEvent, {error}) => (\n          <button onClick={() => {\n            if(confirm(\"Are you sure you want to delete this event?\")) {\n              deleteEvent().catch(err => {\n                alert(error.message);\n              });\n              Router.push({\n                pathname: '/'\n              })\n            }\n          }}>{this.props.children}</button>\n        )\n        }\n      </Mutation>\n    );\n  }\n}\n\nexport { DELETE_EVENT_MUTATION, }\nexport default DeleteEvent;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAeA;;;;AA/BA;AACA;AAiCA;AACA;;;;A","sourceRoot":""}